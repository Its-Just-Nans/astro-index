---
import fs from "fs";
import fsp from "fs/promises";
import BackImg from "./assets/back.gif";
import FolderImg from "./assets/folder.gif";
import UnknownImg from "./assets/unknown.gif";
import { join } from "path";

interface Props {
    path: string;
    title?: string;
}
const { path = ".", title = path } = Astro.props;
if (!path) {
    throw new Error("path is required");
}
if (!fs.existsSync(path)) {
    throw new Error("path does not exist");
}

const files = (await fsp.readdir(path)).sort();
---

<h1>Index of {title}</h1>
<table>
    <tr>
        <th valign="top">
            <img src={FolderImg.src} alt="[ICO]" />
        </th>
        <th><a href="">Name</a></th>
        <th><a href="">Last modified</a></th>
        <th><a href="">Size</a></th>
        <th><a href="">Description</a></th>
    </tr>
    <tr>
        <th colspan="5"><hr /></th>
    </tr>
    <tr>
        <td valign="top">
            <img src={BackImg.src} alt="[PARENTDIR]" />
        </td>
        <td><a href="..">Parent Directory</a></td>
        <td>&nbsp;</td>
        <td align="right">-</td>
        <td>&nbsp;</td>
    </tr>
    {
        files.map((file) => {
            const stat = fs.statSync(join(path, file));
            const isFolder = stat.isDirectory();
            return (
                <tr>
                    <td valign="top">
                        <img src={isFolder ? FolderImg.src : UnknownImg.src} alt="[]" />
                    </td>
                    <td>
                        <a href={file}>{file}</a>
                    </td>
                    <td align="right">{stat.mtime.toISOString()}</td>
                    <td align="right">{stat.size}</td>
                    <td>&nbsp;</td>
                </tr>
            );
        })
    }

    <tr>
        <th colspan="5"><hr /></th>
    </tr>
</table>
